---
import { getCollection, type CollectionEntry } from "astro:content";
import DocumentationLayout from "#layouts/DocumentationLayout.astro";
import HeadingTree from "#components/HeadingTree.svelte";
import CollectionTree from "#components/CollectionTree.svelte";
import { getArticleTree } from "#lib/getArticleTree";
import Footer from "#components/Footer.astro";
import { getArticleParents } from "#lib/getArticleParents";

const slug = Astro.params.slug as string;

const articles = await getCollection("docs", (entry) => entry.slug == slug);

if (articles.length == 0 || articles.length > 1) {
	return Astro.redirect("/404")
}

const article = articles[0];
// Recursively resolve all parent directories of this article
const parents = [...await getArticleParents(article, "docs"), article	]

const {Content, headings} = await article.render()

const collection = await getCollection("docs");
const tree = getArticleTree(collection)

---

<DocumentationLayout title={article.data.title} listOfTitles={parents}>
	<div class="grid grid-cols-1 xl:grid-cols-[1fr_3fr_1fr] gap-16">
		<div class="xl:block hidden sticky top-36 h-[calc(100vh-9rem)] overflow-y-auto not-prose">
			<ul class="menu px-4 sticky py-8 top-0 min-h-full bg-base-100 border-r-2 border-r-base-200 text-base-content">
				<CollectionTree tree={tree} slug={slug}></CollectionTree>
			</ul>
		</div>
		<article class="my-8 px-4">
			<h1>{article.data.title}</h1>
			<Content></Content>
		</article>
		<div class="my-8">
			<HeadingTree headings={headings} client:load></HeadingTree>
		</div>
	</div>
</DocumentationLayout>


<style is:global>
	article pre {
		@apply !p-6;
	}
</style>
